// GLOBALS
// Trying to keep global selectors as minimal as possible

body,html {
    margin: 0;
    padding: 0;
    background: $white;
    @extend %type--default;
}

div {
    box-sizing: border-box;
}

// ANIMATED NAV
// The formatting follows (loosely) the BEM style.
// So, base--element__modifier
// (I know this is backwards, but I think underscores are less important than hyphens)
// e.g. pane--handle__active or gallery__full or gallery--images
// I like to chain these by element, so they lose the base the deeper they go

nav#nav {
    position: fixed;
    top: 0;
    right: 0;
    left: 0;
    pointer-events: none;
    z-index: 100;

    .nav--pane {
        height: $handle;
        @include breakpoints(height, $handle-sm, $handle-md, $handle-lg, $handle-xl);
        transition: 0.25s;
        border-bottom: 1px solid $black;
        @include bp-sm- {
            box-shadow: 0px -5px 10px rgba(0,0,0,0.1);
            border-bottom: none;
        }
    

        .pane--handle {
            @extend %type--body__upper;
            height: $handle;
            @include breakpoints(height, $handle-sm, $handle-md, $handle-lg, $handle-xl);
            display: flex;
            align-items: center;
            pointer-events: all;
            padding: 0 $unit;

            @include breakpoints(
                padding,
                0 $unit-sm * 2,
                0 $unit-md * 2,
                0 $unit-lg * 2,
                0 $unit-xl * 2
            );
            text-align: left;

            .pane--subpagetitle {
                @include bp-sm {
                    display: none;
                }
            }
        }

        &.pane--handle__active {
            @include bp-sm {
                background: $white;
            }
            @include bp-sm- {
                height: calc(100vh - #{$handle} * 2);
                @include breakpoints(
                    height,
                    calc(100vh - #{$handle-sm} * 2),
                    calc(100vh - #{$handle-md} * 2),
                    calc(100vh - #{$handle-lg} * 2),
                    calc(100vh - #{$handle-xl} * 2)
                );
                .pane--handle {
                    mix-blend-mode: difference;
                }
            }

        }

        &:not(.pane--handle__active) {
            background: $white;
        }


        &:last-child {
            @include bp-sm {
                background: $misterworldwides-yellow;
            }
            &.anim--expand, &.anim--shrink {
                // background: $misterworldwides-yellow;
            }

            &:not(.pane--handle__active) {
                background: $misterworldwides-yellow;
            }

            .pane--handle {
                position: relative;

                &.__hasmarquee {
                    padding: 0;
                }
            }
            white-space: nowrap;

            .notices--marquee {
                padding-left: 200px;
                overflow: hidden;

                .marquee--marker {
                    margin: 0 2em;
                }
            }
        }
    }

    a {
        color: $black;
        text-decoration: none;
        text-transform: uppercase;
    }

    
}

#container {
    
}

main {

    &#home, &#internal {
        padding-top: $handle * 3;
        @include breakpoints(padding-top, $handle-sm, $handle-md, $handle-lg, $handle-xl);
        margin-bottom: $handle;
        @include breakpoints(margin-bottom, $handle-sm * 2, $handle-md * 2, $handle-lg * 2, $handle-xl * 2);
    }

    &#about {
        padding-top: $handle * 3;
        @include breakpoints(padding-top, $handle-sm * 2, $handle-md * 2, $handle-lg * 2, $handle-xl * 2);
        margin-bottom: $handle;
        @include breakpoints(margin-bottom, $handle-sm, $handle-md, $handle-lg, $handle-xl);
    }

    &#notices {
        background: $misterworldwides-yellow;
        padding-top: $handle * 3;
        @include breakpoints(padding-top, $handle-sm * 3, $handle-md * 3, $handle-lg * 3, $handle-xl * 3);
    }

    &#notice {
        background: $misterworldwides-yellow;
        padding-top: $handle * 3;
        display: flex;
        align-items: center;
        justify-content: center;


        min-height: calc(100vh - #{$handle} * 2);
        @include breakpoints(
            min-height,
            calc(100vh - #{$handle-sm} * 2),
            calc(100vh - #{$handle-md} * 2),
            calc(100vh - #{$handle-lg} * 2),
            calc(100vh - #{$handle-xl} * 2)

        )
    }

    #content {
        margin: 0 auto;
    }
}

// Blocks
// Rather than using one big grid, each block is a separate grid to flow better.
// Some helpers that we can reuse with out blocks.
// The resultant CSS isn't that DRY, but the SCSS is more readable.

%block {
    // padding: $unit * 1;
    border-top: 1px solid $transparentblack;
    // @include breakpoints(
    //     padding, 
    //     $unit-sm * 1, 
    //     $unit-md * 1, 
    //     $unit-lg * 1, 
    //     $unit-xl * 1
    // );
}

%collapsepaddingbottom {
    @include bp-sm {
        padding-bottom: 0;
    }
}

%grid {
    display: grid;
    grid-template-columns: repeat(12, 1fr);
    // grid-gap: $unit * 1.5;


    & > div, & > a {
        box-sizing: border-box;
        padding: $unit * 2;
        @include bp-units(padding, 1);
    }


    // @include breakpoints(
    //     grid-gap, 
    //     $unit-sm * 1.5, 
    //     $unit-md * 1.5, 
    //     $unit-lg * 1.5, 
    //     $unit-xl * 1.5
    // );
}

%grid--paddingleft {
    padding-left: $unit * 2;
    @include bp-units (padding-left, 2);
}

%grid--paddingright {
    padding-right: $unit * 2;
    @include bp-units (padding-right, 2);
}

// Gridline code
%gridline__list {
    border-bottom: 1px solid $transparentblack;

    &:last-child {
        border-bottom: none;
    }
    @include bp-sm {
        border-left: none;
        border-top: 1px solid $transparentblack;
        border-bottom: none;
    }
}

%iconresize {
    width: $unit * 4;
    height: $unit * 4;
    @include bp-units(width, 2.5);
    @include bp-units(height, 2.5);
}

// When we have a full screen block, and just need padding for the other elements
%full { 
    padding: $unit * 2;
    @include bp-units(padding, 2);
    padding-top: $unit * 1;
    @include bp-units(padding-top, 1);
}

// Collapse only at the smallest size
@mixin col-collapse-sm ($full) {
    grid-column: $full;
    @include bp-sm {
        grid-column: 1 / -1;
    }
}

// Collapse at medium sizes
@mixin col-collapse-md ($full) {
    grid-column: $full;
    @include bp-sm {
        grid-column: 1 / -1;
    }
}

.notice {
    @extend %block;
    @extend %grid;
    background: $misterworldwides-yellow;
    grid-auto-flow: row dense;

    &:not(.notice__active) {
        .notice--tools, .notice--body {
            display: none;
        }

        &:hover {
            background: $black;
            color: $misterworldwides-yellow;
            cursor: pointer;
            svg {
                stroke: $misterworldwides-yellow;
            }
        }
    }

    &.notice__isolated {
        border-top: none;
        grid-auto-flow: row dense;
        grid-template-rows: auto auto 1fr; 
        
        .notice--title {
            h2 {
                @extend %type--feature;
            }
            grid-row: 1;
            @extend %grid--paddingleft;
            @include col-collapse-md(#{'1 / 7'});
        }

        .notice--meta {
            @include col-collapse-md(#{'1 / 7'});
            grid-row: 2;
        }

        .notice--tools {
            grid-row: 3;
            .button--permalink {
                display: none;
            }

            @include bp-sm { 
                display: none;
            }

        }

        .notice--body {
            @include col-collapse-md(#{'7 / 13'});
            grid-row: 1 / 4;
            @extend %grid--paddingright;
            @include bp-sm {
                grid-row: auto;
            }
        }


    }

    svg {
        stroke: $black;
        @extend %iconresize;
    }

    .notice--meta {
        @extend %type--body;
        @extend %grid--paddingleft;
        @extend %collapsepaddingbottom;
        @include col-collapse-md(#{'1 / 5'});
    }

    .notice--title {
        @include col-collapse-md(#{'5 / 13'});
        @include bp-units(padding-right, 2);
    }

    .notice--tools {
        @include col-collapse-md(#{'1 / 5'});
        @extend %grid--paddingleft;

        .notice--button {
            background: none;
            outline: none;
            padding: 0;
            margin: 0;
            border: none;
            transition: transform 0.25s;

            &:hover {
                cursor: pointer;
                transform: scale(1.1);
            }


            .button--print {
                display: none;
            }
        }
    }

    .notice--body {
        @extend %type--body;
        @include col-collapse-md(#{'5 / 13'});
        @include bp-units(padding-right, 2);
    }

    .notice--hidden {
        display: none;
    }
}

.textblock {
    @extend %block;
    @extend %grid;
    grid-template-rows: auto 1fr;

    .textblock--feature {
        @extend %type--feature;
        margin: 0 auto;
        max-width: 1600px;
        text-align: center;
        grid-column: 1 / -1;
        padding: $unit * 4 $unit * 3;

        @include breakpoints(
            padding,
            $unit-sm * 6 $unit-sm * 3,
            $unit-md * 6 $unit-md * 3,
            $unit-lg * 6 $unit-lg * 3,
            $unit-xl * 6 $unit-xl * 3
        )
    }

    .textblock--caption {
        @extend %grid--paddingleft;
        @extend %type--heading__upper;
        @extend %collapsepaddingbottom;
        @include col-collapse-sm(#{'1 / 3'});
    }

    .textblock--content {
        @extend %type--body;
        @include col-collapse-sm(#{'5 / 13'});
        grid-row: 1 / 3;
        @include bp-units(padding-right, 2);
        @include bp-sm {
            grid-row: auto;
        }
    }

    .textblock--cta {
        @extend %grid--paddingleft;
        @extend %type--body;
        @include col-collapse-sm(#{'3 / 5'});
    }
}

.link {
    @extend %block;
    @extend %grid;

    color: $brutalistikea-blue;
    border-top: 1px solid $brutalistikea-blue;
    border-bottom: 1px solid $brutalistikea-blue;
    margin-bottom: -1px;
    position: relative;

    svg {
        stroke: $brutalistikea-blue;
        @extend %iconresize;
    }

    &:hover {
        background: $brutalistikea-blue;
        color: $white;
        svg {
            stroke: $white;
        }
    }

    .link--caption {
        @extend %type--heading__upper;
        @extend %grid--paddingleft;
        @extend %collapsepaddingbottom;
        @include col-collapse-sm(#{'1 / 4'});
    }

    .link--title {
        @extend %type--heading;
        @include col-collapse-sm(#{'5 / 10'});
        padding-right: $unit * 2.5;
        @include bp-units(padding-right, 2.5);
    }
    .link--icon {
        grid-column: 12 / 13;
        align-self: center;
        text-align: right;
        position: absolute;
        right: 0;
        bottom: 0;
        top: 0;
        display: flex;
        align-items: center;
        padding-right: $unit * 2;
        @include bp-units(padding-right, 2);

        @include bp-sm {
            display: none;
        }

        svg {
            display: block;
            @extend %iconresize;
        }
    }
}

.gallery {
    @extend %grid;
    @extend %block;
    grid-auto-flow: row dense;

    .carousel--item {
        width: 100%;
    }

    &.gallery__right {
        .gallery--images { 
            @include col-collapse-md(#{'5 / -1'}); 
            
            padding-left: 0;
            @include bp-units(padding-left, 1);
        }
        .flickity-page-dots {
            text-align: right;
            right: calc(100% + #{$unit});
            @include breakpoints(
                right,
                calc(100% + #{$unit-sm}),
                calc(100% + #{$unit-md}),
                calc(100% + #{$unit-lg}),
                calc(100% + #{$unit-xl})
            );
        }
        .gallery--caption { @include col-collapse-md(#{'2 / 5'}); }
    }

    &.gallery__left {
        .gallery--images { 
            @include col-collapse-md(#{'1 / 9'}); 

            padding-right: 0;

            @include bp-units(padding-right, 1);

            @include bp-sm {
                padding: 0;
            }

        }
        @include bp-sm- {
            .flickity-page-dots {
                text-align: left;
                left: calc(100% + #{$unit});
                @include breakpoints(
                    left,
                    calc(100% + #{$unit-sm}),
                    calc(100% + #{$unit-md}),
                    calc(100% + #{$unit-lg}),
                    calc(100% + #{$unit-xl})
                );
            }
        }
        .gallery--caption { @include col-collapse-md(#{'9 / 12'}); }

    }

    &.gallery__left, &.gallery__right {
        .gallery--caption {
            padding-bottom: $unit * 3;
            @include bp-units(padding-bottom, 3);
        }
        @include bp-sm- {
            .flickity-page-dots {
                width: 20%;
                .dot {
                    border: 1px solid $black;
                    &.is-selected {
                        background: $black;
                    }
                }
            }
        }

    }

    &.gallery__full {

        .gallery--images { 
            padding: 0;
            @include col-collapse-md(#{'1 / -1'}); }
        .gallery--caption { 
            @include col-collapse-md(#{'1 / -1'}); 
            @extend %full;
            padding-top: $unit;
            @include bp-units(padding-top, 1);
        }
    }

    .gallery--images {
        grid-column: #{'1 / 9'};
        padding: -3 * $unit;

        img {
            display: block;
            width: 100%;
        }
    }

    .gallery--caption {
        @extend %type--body;
        align-self: end;
        @include bp-sm {
            text-align: center;
        }
    }

    // Following is code specific to Flickity, our carousel library
    .flickity-page-dots {
        bottom: $unit;
        @include bp-units(bottom, 1);

        width: 100%;

        .dot {
            background: transparent;
            border: 1px solid $white;
            opacity: 1;
            width: $unit;
            @include bp-units(width, 0.5);

            height: $unit;
            @include bp-units(height, 0.5);

            &.is-selected {
                background: $white;
            }
        }
    }

    .flickity-prev-next-button {
        top: 50%;
        bottom: 0;
        height: 100%;
        width: 50%;
        background: none;
        border-radius: 0;

        &.next {
            cursor: url(../img/cursor-next.svg), e-resize;
        }

        &.previous {
            cursor: url(../img/cursor-prev.svg), w-resize;
        }

        svg {
            display: none;
        }

        @include bp-sm {
            display: none;
        }
    }
}

.list {
    @extend %block;
    @extend %grid;

    .list--caption {
        @extend %grid--paddingleft;
        @extend %type--heading__upper;
        @extend %collapsepaddingbottom;
        @include col-collapse-md(#{'1 / 3'});
        grid-row: -3;
    }

    .list--cta {
        @extend %grid--paddingleft;
        @include col-collapse-md(#{'1 / 5'});
        grid-row: 2 / -2;
        @extend %type--body;
    }

    .list--description {
        @extend %type--body;
        @include col-collapse-md(#{'5 / 13'});
    }

    .list--item {
        @extend %gridline__list;
        @include col-collapse-md(#{'5 / 13'});
        display: block;
        grid-row: span 1;
        @include bp-sm- {
            padding-left: 0;
            padding-right: 0;
        }
        @include bp-units (margin-left, 1);
        @include bp-units (margin-right, 2);
        position: relative;

        .item--title {
            @extend %type--heading;
            padding-right: $unit * 2.5;
            @include bp-units(padding-right, 2.5);
        }
        .item--icon {
            position: absolute;
            right: 0;
            top: 0;
            bottom: 0;
            display: flex;
            align-items: center;
            padding-right: $unit * 2;
            @include bp-sm- {
                padding-right: 0;
            }

            svg {
                display: block;
                stroke: $black;
                @extend %iconresize;
            }
        }
        .item--description {
            padding-top: 13px;
            align-self: end;
            padding-right: $unit * 2.5;
            @include bp-units(padding-right, 2.5);
        }

        &.list--item__interactive:hover {
            color: $brutalistikea-blue;
            svg {
                stroke: $brutalistikea-blue;
            }
        }
        
    }
}

.multimedia {
    @extend %grid;
    @extend %block;
    grid-auto-flow: row dense;

    &.multimedia__right {
        .multimedia--embed, .multimedia--video { 
            @include col-collapse-md(#{'5 / 13'}); 

            padding-left: 0;
            @include bp-units(padding-left, 1);
        }
        .multimedia--caption { @include col-collapse-md(#{'2 / 5'}); }
    }

    &.multimedia__left {
        .multimedia--embed, .multimedia--video { 
            @include col-collapse-md(#{'5 / 13'}); 

            padding-right: 0;
            @include bp-units(padding-right, 1);
        }
        .multimedia--caption { @include col-collapse-md(#{'2 / 5'}); }
    }

    &.multimedia__full {

        .multimedia--embed, .multimedia--video { 
            padding: 0;
            @include col-collapse-md(#{'1 / -1'}); 
        }
        .multimedia--caption { 
            @include col-collapse-md(#{'1 / -1'}); 
            @extend %full;
            padding-top: $unit;
            @include bp-units(padding-top, 1);
        }
    }

    .multimedia--caption {
        @extend %type--body;
        align-self: end;
        @include bp-sm {
            text-align: center;
        }
    }

    video {
        width: 100%;
        display: block;
    }

}

.imagegrid {
    @extend %grid;
    @extend %block;

    .imagegrid--image {
        @include col-collapse-md(#{'span 6'});
        padding: 0;

        img {
            width: 100%;
            display: block;
        }
    }

    .imagegrid--description {
        @extend %full;
        @extend %type--body;
        @include col-collapse-md(#{'1 / 4'});
    }
}