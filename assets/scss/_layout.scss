// GLOBALS
// Trying to keep global selectors as minimal as possible

body,html {
    margin: 0;
    padding: 0;
    background: $white;
    @extend %type--default;
}

div {
    box-sizing: border-box;
}

// ANIMATED NAV
// The formatting follows (loosely) the BEM style.
// So, base--element__modifier
// (I know this is backwards, but I think underscores are less important than hyphens)
// e.g. pane--handle__active or gallery__full or gallery--images
// I like to chain these by element, so they lose the base the deeper they go

nav#nav {
    position: fixed;
    top: 0;
    right: 0;
    left: 0;
    pointer-events: none;
    z-index: 100;

    .nav--pane {
    height: $handle;
    @include breakpoints(height, $handle-sm, $handle-md, $handle-lg, $handle-xl);
    transition: 0.25s;
    // border-top: 1px solid $black;
    box-shadow: 0px -10px 20px rgba(0,0,0,0.1);

        .pane--handle {
            @extend %type--body__upper;
            height: $handle;
            @include breakpoints(height, $handle-sm, $handle-md, $handle-lg, $handle-xl);
            display: flex;
            align-items: center;
            pointer-events: all;
            padding: 0 $unit*2;
            @include breakpoints(
                padding,
                0 $unit-sm * 2,
                0 $unit-md * 2,
                0 $unit-lg * 2,
                0 $unit-xl * 2
            );
            text-align: left;

            .pane--subpagetitle {
                @include bp-md {
                    display: none;
                }
            }
        }

        &.__isactive {
            height: calc(100vh - #{$handle} * 2);
            @include breakpoints(
                height,
                calc(100vh - #{$handle-sm} * 2),
                calc(100vh - #{$handle-md} * 2),
                calc(100vh - #{$handle-lg} * 2),
                calc(100vh - #{$handle-xl} * 2)
            );
            .pane--handle {
                mix-blend-mode: difference;
            }
        }

        &:not(.__isactive) {
            background: $white;
        }


        &:last-child {
            &.anim--expand, &.anim--shrink {
                // background: $misterworldwides-yellow;
            }

            &:not(.__isactive) {
                background: $misterworldwides-yellow;
            }

            .pane--handle {
                position: relative;

                &.__hasmarquee {
                    padding-left: 0;
                    padding-right: 0;
                }
            }
            white-space: nowrap;

            .notices--marquee {
                padding-left: 200px;
                overflow: hidden;

                .marquee--marker {
                    margin: 0 2em;
                }
            }
        }
    }

    a {
        color: $black;
        text-decoration: none;
        text-transform: uppercase;
    }

    
}

#container {
    
}

main {

    &#home, &#internal {
        padding-top: $handle;
        @include breakpoints(padding-top, $handle-sm, $handle-md, $handle-lg, $handle-xl);
        margin-bottom: $handle;
        @include breakpoints(margin-bottom, $handle-sm * 2, $handle-md * 2, $handle-lg * 2, $handle-xl * 2);
    }

    &#about {
        padding-top: $handle * 2;
        @include breakpoints(padding-top, $handle-sm * 2, $handle-md * 2, $handle-lg * 2, $handle-xl * 2);
        margin-bottom: $handle;
        @include breakpoints(margin-bottom, $handle-sm, $handle-md, $handle-lg, $handle-xl);
    }

    &#notices {
        background: $misterworldwides-yellow;
        padding-top: $handle * 3;
        @include breakpoints(padding-top, $handle-sm * 3, $handle-md * 3, $handle-lg * 3, $handle-xl * 3);
    }

    &#notice {
        background: $misterworldwides-yellow;
        padding-top: $handle * 3;
        min-height: 100vh;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    #content {
        margin: 0 auto;
    }
}

// Blocks
// Rather than using one big grid, each block is a separate grid to flow better.
// Some helpers that we can reuse with out blocks.
// The resultant CSS isn't that DRY, but the SCSS is more readable.

%block {
    padding: $unit * 2;
    border-top: 1px solid $transparentblack;
    @include breakpoints(
        padding, 
        $unit-sm * 2, 
        $unit-md * 2, 
        $unit-lg * 2, 
        $unit-xl * 2
    );
}

%grid {
    display: grid;
    grid-template-columns: repeat(12, 1fr);
    grid-gap: $unit * 1.5;
    @include breakpoints(
        grid-gap, 
        $unit-sm * 1.5, 
        $unit-md * 1.5, 
        $unit-lg * 1.5, 
        $unit-xl * 1.5
    );
}

// When we have a full screen block, and just need padding for the other elements
%full {
    padding: $unit * 2;
    @include breakpoints(
        padding, 
        0 $unit-sm * 2, 
        0 $unit-md * 2, 
        0 $unit-lg * 2, 
        0 $unit-xl * 2
    );
    padding-bottom: $unit * 2;

    @include breakpoints(
        padding-bottom, 
        $unit-sm * 2, 
        $unit-md * 2, 
        $unit-lg * 2, 
        $unit-xl * 2
    );
}

// Collapse only at the smallest size
@mixin col-collapse-sm ($full) {
    grid-column: $full;
    @include bp-sm {
        grid-column: 1 / -1;
    }
}

// Collapse at medium sizes
@mixin col-collapse-md ($full) {
    grid-column: $full;
    @include bp-md {
        grid-column: 1 / -1;
    }
}

.notice {
    @extend %block;
    @extend %grid;
    background: $misterworldwides-yellow;
    grid-auto-flow: row dense;

    &:not(.notice__active) {
        .notice--tools, .notice--location, .notice--body {
            display: none;
        }

        &:hover {
            background: $black;
            color: $misterworldwides-yellow;
            cursor: pointer;
            svg {
                stroke: $misterworldwides-yellow;
            }
        }
    }

    svg {
        stroke: $black;
    }

    .notice--meta {
        @extend %type--body;
        @include col-collapse-md(#{'1 / 5'});
    }

    .notice--title {
        @include col-collapse-md(#{'5 / 12'});
    }

    .notice--tools {
        @include col-collapse-md(#{'1 / 5'});

        .notice--button {
            background: none;
            outline: none;
            padding: 0;
            margin: 0;
            border: none;
            transition: transform 0.25s;

            &:hover {
                cursor: pointer;
                transform: scale(1.1);
            }
        }
    }

    .notice--body {
        @extend %type--body;
        @include col-collapse-md(#{'5 / 12'});
    }
}

.textblock {
    @extend %block;

    &.textblock__featured {
        @extend %type--feature;
        text-align: center;
        padding: 120px 60px;
    }
}

.link {
    @extend %block;
    @extend %grid;

    color: $brutalistikea-blue;
    border-top: 1px solid $brutalistikea-blue;
    border-bottom: 1px solid $brutalistikea-blue;
    margin-bottom: -1px;

    svg {
        stroke: $brutalistikea-blue;
    }

    &:hover {
        background: $brutalistikea-blue;
        color: $white;
        svg {
            stroke: $white;
        }
    }

    .link--caption {
        @extend %type--body__upper;
        @include col-collapse-sm(#{'1 / 3'});
    }

    .link--title {
        @extend %type--heading;
        @include col-collapse-sm(#{'5 / 12'});
    }
    .link--icon {
        grid-column: span 1;
        align-self: center;
        text-align: right;
        @include bp-md {
            display: none;
        }
    }
}

.gallery {
    @extend %grid;
    @extend %block;
    grid-auto-flow: row dense;

    .carousel--item {
        width: 100%;
    }

    &.gallery__right {
        .gallery--images { @include col-collapse-md(#{'5 / -1'}); }
        .gallery--caption { @include col-collapse-md(#{'2 / 5'}); }
    }

    &.gallery__left {
        .gallery--images { @include col-collapse-md(#{'1 / 9'}); }
        .gallery--caption { @include col-collapse-md(#{'9 / 12'}); }

    }

    &.gallery__full {
        padding: 0;

        .gallery--images { @include col-collapse-md(#{'1 / -1'}); }
        .gallery--caption { 
            @include col-collapse-md(#{'5 / -1'}); 
            @extend %full;
        }
    }

    .gallery--images {
        grid-column: #{'1 / 9'};

        img {
            width: 100%;
        }
    }

    .gallery--caption {
        @extend %type--body;
        align-self: end;
        padding-bottom: $unit * 1.5;
        @include breakpoints(
            padding-bottom, 
            $unit-sm * 1.5, 
            $unit-md * 1.5, 
            $unit-lg * 1.5, 
            $unit-xl * 1.5
        );
    }

    // Following is code specific to Flickity, our carousel library
    &.gallery__left .flickity-page-dots {
        text-align: right;
    }

    &.gallery__right .flickity-page-dots {
        text-align: left;
    }

    .flickity-page-dots {
        .dot {
            background: transparent;
            border: 1px solid $black;
            opacity: 1;
            &.is-selected {
                background: $black;
            }
        }
    }

    .flickity-prev-next-button {
        top: 50%;
        bottom: 0;
        height: 100%;
        width: 50%;
        background: none;
        border-radius: 0;

        &.next {
            cursor: url(../img/cursor-next.svg), e-resize;
        }

        &.previous {
            cursor: url(../img/cursor-prev.svg), w-resize;
        }

        svg {
            display: none;
        }

        @include bp-md {
            display: none;
        }
    }
}

.list {
    @extend %block;
    @extend %grid;

    .list--caption {
        @extend %type--body__upper;
        @include col-collapse-md(#{'span 6'});
    }

    .list--cta {
        @include col-collapse-md(#{'span 6'});
        grid-row: 2 / 4;
        @extend %type--body;
    }

    .list--description {
        @extend %type--body;
        @include col-collapse-md(#{'5 / 10'});
    }

    .list--item {
        @include col-collapse-md(#{'span 6'});
        display: block;
        grid-row: span 1;
        .item--title {
            @extend %type--heading;
        }
        .item--description {
            padding-top: 13px;
            align-self: end;
        }
        
    }
    .item--icon {
        grid-column: span 1;
        align-self: center;
        text-align: right;
        @include bp-md {
            display: none;
        }
    }
    svg {
        stroke: $black;
    }
}

.multimedia {
    @extend %grid;
    @extend %block;
    grid-auto-flow: row dense;

    &.multimedia__right {
        .multimedia--embed { @include col-collapse-md(#{'5 / 13'}); }
        .multimedia--caption { @include col-collapse-md(#{'1 / 5'}); }
    }

    &.multimedia__left {
        @extend %block;

        .multimedia--embed { @include col-collapse-md(#{'1 / 9'}); }
        .multimedia--caption { @include col-collapse-md(#{'9 / 13'}); }

    }

    &.multimedia__full {
        padding: 0;

        .multimedia--embed { @include col-collapse-md(#{'1 / -1'}); }
        .multimedia--caption { 
            @include col-collapse-md(#{'5 / -1'}); 
            @extend %full;
        }
    }

    .multimedia--caption {
        @extend %type--body;
        align-self: center;
    }

}

.imagegrid {
    @extend %grid;
    @extend %block;

    .imagegrid--image {
        @include col-collapse-md(#{'span 6'});
        img {
            width: 100%;
        }
    }

    .imagegrid--caption {
        @extend %type--heading__upper;
        @include col-collapse-md(#{'1 / 5'});

    }

    .imagegrid--description {
        @extend %type--body;
        @include col-collapse-md(#{'5 / 12'});
    }
}